#ifndef OFFSETS_HPP
#define OFFSETS_HPP

#include <cstdint>


namespace offsets {
	namespace camera {
		constexpr uintptr_t detach[] = { 0x990E0, 0x0, 0x9D120, 0x0, 0x9D830, 0x9D670 };
		constexpr uintptr_t set[] = { 0x99120, 0x0, 0x9D070, 0x0, 0x9D780, 0x9D5C0 };
		constexpr uintptr_t point_at[] = { 0x99180, 0x0, 0x9D0D0, 0x0, 0x9D7E0, 0x9D620 };
		constexpr uintptr_t restore[] = { 0x991D0, 0x0, 0x9D030, 0x0, 0x9D740, 0x9D580 };
		constexpr uintptr_t set_track_vector[] = { 0x98FA0, 0x0, 0x9CEF0, 0x0, 0x9D600, 0x9D440 };
		constexpr uintptr_t set_move_vector[] = { 0x98F30, 0x0, 0x9CE80, 0x0, 0x9D590, 0x9D3D0 };
		constexpr uintptr_t set_to_owner[] = { 0x99050, 0x0, 0x9CFA0, 0x0, 0x9D6B0, 0x9D4F0 };
		constexpr uintptr_t attach[] = { 0x99000, 0x0, 0x9CF50, 0x0, 0x9D660, 0x9D4A0 };
		constexpr uintptr_t get_matrix[] = { 0x98E00, 0x0, 0x9CD50, 0x0, 0x9D460, 0x9D2A0 };
		constexpr uintptr_t get_distance_to_point[] = { 0x990A0, 0x0, 0x9CFF0, 0x0, 0x9D700, 0x9D540 };
		constexpr uintptr_t fade[] = { 0x98DE0, 0x0, 0x9CD30, 0x0, 0x9D440, 0x9D280 };
		constexpr uintptr_t set_matrix[] = { 0x98E80, 0x0, 0x9CDD0, 0x0, 0x9D4E0, 0x9D320 };
		constexpr uintptr_t take_control[] = { 0x98F10, 0x0, 0x9CE60, 0x0, 0x9D570, 0x9D3B0 };
	}

	namespace chat {
		constexpr uintptr_t reference[] = { 0x21A0E4, 0x21A0EC, 0x26E8C8, 0x26E9F8, 0x26EB80, 0x2ACA10 };
		constexpr uintptr_t get_mode[] = { 0x5D7A0, 0x0, 0x60B40, 0x0, 0x612B0, 0x60D30 };
		constexpr uintptr_t switch_mode[] = { 0x5D7B0, 0x0, 0x60B50, 0x0, 0x612C0, 0x60D40 };
		constexpr uintptr_t recalc_font_size[] = { 0x63550, 0x0, 0x669A0, 0x0, 0x67120, 0x66B90 };
		constexpr uintptr_t on_lost_device[] = { 0x635D0, 0x0, 0x66A20, 0x0, 0x671A0, 0x66C10 };
		constexpr uintptr_t on_reset_device[] = { 0x64600, 0x0, 0x67A50, 0x0, 0x681D0, 0x67C40 };
		constexpr uintptr_t update_scrollbar[] = { 0x63630, 0x0, 0x66A80, 0x0, 0x67200, 0x66C70 };
		constexpr uintptr_t set_page_size[] = { 0x636D0, 0x0, 0x66B20, 0x0, 0x672A0, 0x66D10 };
		constexpr uintptr_t page_up[] = { 0x63700, 0x0, 0x66B50, 0x0, 0x672D0, 0x66D40 };
		constexpr uintptr_t page_down[] = { 0x63760, 0x0, 0x66BB0, 0x0, 0x67330, 0x66D40 };
		constexpr uintptr_t render_entry[] = { 0x638A0, 0x0, 0x66CF0, 0x0, 0x67470, 0x66EE0 };
		constexpr uintptr_t log[] = { 0x63C00, 0x0, 0x67050, 0x0, 0x677D0, 0x67240 };
		constexpr uintptr_t reset_dialog_controls[] = { 0x63CD0, 0x0, 0x67120, 0x0, 0x678A0, 0x67310 };
		constexpr uintptr_t render[] = { 0x63D70, 0x0, 0x671C0, 0x0, 0x67940, 0x673B0 };
		constexpr uintptr_t add_entry[] = { 0x64010, 0x0, 0x67460, 0x0, 0x67BE0, 0x67650 };
		constexpr uintptr_t draw[] = { 0x64230, 0x0, 0x67680, 0x0, 0x67E00, 0x67870 };
		constexpr uintptr_t render_to_surface[] = { 0x64300, 0x0, 0x67750, 0x0, 0x67ED0, 0x67940 };
		constexpr uintptr_t add_chat_message[] = { 0x64450, 0x0, 0x678A0, 0x0, 0x68020, 0x67A90 };
		constexpr uintptr_t add_message[] = { 0x645A0, 0x64670, 0x679F0, 0x68130, 0x68170, 0x67BE0 };
		constexpr uintptr_t scroll_to_bottom[] = { 0x637C0, 0x0, 0x66C10, 0x0, 0x67390, 0x66E00 };
		constexpr uintptr_t scroll[] = { 0x637F0, 0x0, 0x66C40, 0x0, 0x673C0, 0x66E30 };
		constexpr uintptr_t filter_out_invalid_chars[] = { 0x63850, 0x0, 0x66CA0, 0x0, 0x67420, 0x66E90 };
	}

	namespace input {
		constexpr uintptr_t reference[] = { 0x21A0E8, 0x0, 0x26E8CC, 0x0, 0x26EB84, 0x2ACA14 };
		constexpr uintptr_t get_rect[] = { 0x657A0, 0x0, 0x68CD0, 0x0, 0x69440, 0x68E80 };
		constexpr uintptr_t open[] = { 0x657E0, 0x0, 0x68D10, 0x0, 0x69480, 0x68EC0 };
		constexpr uintptr_t close[] = { 0x658E0, 0x0, 0x68E10, 0x0, 0x69580, 0x68FC0 };
		constexpr uintptr_t add_recall[] = { 0x65930, 0x0, 0x68E60, 0x0, 0x695D0, 0x69010 };
		constexpr uintptr_t recall_up[] = { 0x65990, 0x0, 0x68EC0, 0x0, 0x69630, 0x69070 };
		constexpr uintptr_t recall_down[] = { 0x65A00, 0x0, 0x68F30, 0x0, 0x696A0, 0x690E0 };
		constexpr uintptr_t enable_cursor[] = { 0x65A50, 0x0, 0x68F80, 0x0, 0x696F0, 0x69130 };
		constexpr uintptr_t get_command_handler[] = { 0x65A70, 0x0, 0x68FA0, 0x0, 0x69710, 0x69150 };
		constexpr uintptr_t set_default_command[] = { 0x65AC0, 0x0, 0x68FF0, 0x0, 0x69760, 0x691A0 };
		constexpr uintptr_t add_command[] = { 0x65AD0, 0x0, 0x69000, 0x0, 0x69770, 0x691B0 };
		constexpr uintptr_t msg_proc[] = { 0x65B30, 0x0, 0x69060, 0x0, 0x697D0, 0x69210 };
		constexpr uintptr_t reset_dialog_controls[] = { 0x65BA0, 0x0, 0x690D0, 0x0, 0x69840, 0x69280 };
		constexpr uintptr_t send[] = { 0x65C60, 0x0, 0x69190, 0x0, 0x69900, 0x69340 };
		constexpr uintptr_t process_input[] = { 0x65D30, 0x0, 0x69260, 0x0, 0x699D0, 0x69410 };
	}

	namespace fonts {
		constexpr uintptr_t reference[] = { 0x21A0FC, 0x0, 0x26E8E4, 0x0, 0x26EB9C, 0x2ACA2C };
		constexpr uintptr_t on_lost_device[] = { 0x66AA0, 0x0, 0x6AA10, 0x0, 0x70EA0, 0x6ABC0 };
		constexpr uintptr_t on_reset_device[] = { 0x66AE0, 0x0, 0x6AA50, 0x0, 0x6B1C0, 0x6AC00 };
		constexpr uintptr_t get_text_screen_size[] = { 0x66B20, 0x0, 0x6AA90, 0x0, 0x6B200, 0x6AC40 };
		constexpr uintptr_t get_little_text_screen_size[] = { 0x66BD0, 0x0, 0x6AB40, 0x0, 0x6B2B0, 0x6ACF0 };
		constexpr uintptr_t draw_text[] = { 0x66C80, 0x0, 0x6ABF0, 0x0, 0x6B360, 0x6ADA0 };
		constexpr uintptr_t draw_little_text[] = { 0x66E00, 0x0, 0x6AD70, 0x0, 0x6B4E0, 0x6AF20 };
		constexpr uintptr_t reset[] = { 0x67200, 0x0, 0x6B170, 0x0, 0x6B8E0, 0x6B320 };
		constexpr uintptr_t draw_license_plate_text[] = { 0x66F70, 0x0, 0x6AEE0, 0x0, 0x6B650, 0x6B090 };
	}

	namespace vehicle {
		constexpr uintptr_t change_interior[] = { 0xB0B40, 0x0, 0xB6800, 0x0, 0xB7090, 0xB6BD0 };
		constexpr uintptr_t reset_pointers[] = { 0xB0B70, 0x0, 0xB6830, 0x0, 0xB70C0, 0xB6C00 };
		constexpr uintptr_t has_driver[] = { 0xB0B90, 0x0, 0xB6850, 0x0, 0xB70E0, 0xB6C20 };
		constexpr uintptr_t is_occupied[] = { 0xB0BE0, 0x0, 0xB68A0, 0x0, 0xB7130, 0xB6C70 };
		constexpr uintptr_t set_invulnerable[] = { 0xB0C40, 0x0, 0xB6900, 0x0, 0xB7190, 0xB6CD0 };
		constexpr uintptr_t set_locked[] = { 0xB0CE0, 0x0, 0xB69A0, 0x0, 0xB7230, 0xB6D70 };
		constexpr uintptr_t get_health[] = { 0xB0D50, 0x0, 0xB6A10, 0x0, 0xB72A0, 0xB6DE0 };
		constexpr uintptr_t set_health[] = { 0xB0D70, 0x0, 0xB6A30, 0x0, 0xB72C0, 0xB6E00 };
		constexpr uintptr_t set_color[] = { 0xB0D90, 0x0, 0xB6A50, 0x0, 0xB72E0, 0xB6E20 };
		constexpr uintptr_t update_color[] = { 0xB0DE0, 0x0, 0xB6AA0, 0x0, 0xB7330, 0xB6E70 };
		constexpr uintptr_t get_subtype[] = { 0xB0E40, 0x0, 0xB6B00, 0x0, 0xB7390, 0xB6ED0 };
		constexpr uintptr_t is_sunk[] = { 0xB0E60, 0x0, 0xB6B20, 0x0, 0xB73B0, 0xB6EF0 };
		constexpr uintptr_t is_wrecked[] = { 0xB0E80, 0x0, 0xB6B40, 0x0, 0xB73D0, 0xB6F10 };
		constexpr uintptr_t driver_is_player_ped[] = { 0xB0EA0, 0x0, 0xB6B60, 0x0, 0xB73F0, 0xB6F30 };
		constexpr uintptr_t has_player_ped[] = { 0xB0ED0, 0x0, 0xB6B90, 0x0, 0xB7420, 0xB6F60 };
		constexpr uintptr_t is_train_part[] = { 0xB0F10, 0x0, 0xB6BD0, 0x0, 0xB7460, 0xB6FA0 };
		constexpr uintptr_t has_turret[] = { 0xB0F50, 0x0, 0xB6C10, 0x0, 0xB74A0, 0xB6FE0 };
		constexpr uintptr_t enable_siren[] = { 0xB0FF0, 0x0, 0xB6CB0, 0x0, 0xB7540, 0xB7080 };
		constexpr uintptr_t siren_enabled[] = { 0xB1010, 0x0, 0xB6CD0, 0x0, 0xB7560, 0xB70A0 };
		constexpr uintptr_t set_landing_gear_state[] = { 0xB1050, 0x0, 0xB6D10, 0x0, 0xB75A0, 0xB70E0 };
		constexpr uintptr_t get_landing_gear_state[] = { 0xB10E0, 0x0, 0xB6DA0, 0x0, 0xB7630, 0xB7170 };
		constexpr uintptr_t set_hydra_thrusters[] = { 0xB1150, 0x0, 0xB6E10, 0x0, 0xB76A0, 0xB71E0 };
		constexpr uintptr_t get_hydra_thrusters[] = { 0xB1170, 0x0, 0xB6E30, 0x0, 0xB76C0, 0xB7200 };
		constexpr uintptr_t process_markers[] = { 0xB1190, 0x0, 0xB6E50, 0x0, 0xB76E0, 0xB7220 };
		constexpr uintptr_t lock[] = { 0xB12F0, 0x0, 0xB6FB0, 0x0, 0xB7840, 0xB7380 };
		constexpr uintptr_t update_last_driven_time[] = { 0xB1320, 0x0, 0xB6FE0, 0x0, 0xB7870, 0xB73B0 };
		constexpr uintptr_t get_train_speed[] = { 0xB1390, 0x0, 0xB7050, 0x0, 0xB78E0, 0xB7420 };
		constexpr uintptr_t set_train_speed[] = { 0xB13B0, 0x0, 0xB7070, 0x0, 0xB7900, 0xB7440 };
		constexpr uintptr_t set_tires[] = { 0xB13F0, 0x0, 0xB70B0, 0x0, 0xB7940, 0xB7480 };
		constexpr uintptr_t get_tires[] = { 0xB14E0, 0x0, 0xB71A0, 0x0, 0xB7A30, 0xB7570 };
		constexpr uintptr_t update_damage[] = { 0xB1570, 0x0, 0xB7230, 0x0, 0xB7AC0, 0xB7600 };
		constexpr uintptr_t get_panels_damage[] = { 0xB1630, 0x0, 0xB72F0, 0x0, 0xB7B80, 0xB76C0 };
		constexpr uintptr_t get_doors_damage[] = { 0xB1660, 0x0, 0xB7320, 0x0, 0xB7BB0, 0xB76F0 };
		constexpr uintptr_t get_lights_damage[] = { 0xB1690, 0x0, 0xB7350, 0x0, 0xB7BE0, 0xB7720 };
		constexpr uintptr_t attach_trailer[] = { 0xB16C0, 0x0, 0xB7380, 0x0, 0xB7C10, 0xB7750 };
		constexpr uintptr_t detach_trailer[] = { 0xB16E0, 0x0, 0xB73A0, 0x0, 0xB7C30, 0xB7770 };
		constexpr uintptr_t set_trailer[] = { 0xB1730, 0x0, 0xB73F0, 0x0, 0xB7C80, 0xB77C0 };
		constexpr uintptr_t get_trailer[] = { 0xB1740, 0x0, 0xB7400, 0x0, 0xB7C90, 0xB77D0 };
		constexpr uintptr_t get_tractor[] = { 0xB17A0, 0x0, 0xB7460, 0x0, 0xB7CF0, 0xB7830 };
		constexpr uintptr_t is_trailer[] = { 0xB1820, 0x0, 0xB74E0, 0x0, 0xB7D70, 0xB78B0 };
		constexpr uintptr_t is_towtruck[] = { 0xB1880, 0x0, 0xB7540, 0x0, 0xB7DD0, 0xB7910 };
		constexpr uintptr_t is_rc[] = { 0xB18B0, 0x0, 0xB7570, 0x0, 0xB7E00, 0xB7940 };
		constexpr uintptr_t enable_lights[] = { 0xB1900, 0x0, 0xB75C0, 0x0, 0xB7E50, 0xB7990 };
		constexpr uintptr_t remove_passengers[] = { 0xB1990, 0x0, 0xB7650, 0x0, 0xB7EE0, 0xB7A20 };
		constexpr uintptr_t add_component[] = { 0xB1A70, 0x0, 0xB7730, 0x0, 0xB7FC0, 0xB7B00 };
		constexpr uintptr_t remove_component[] = { 0xB1B50, 0x0, 0xB7810, 0x0, 0xB80B0, 0xB7BE0 };
		constexpr uintptr_t set_paintjob[] = { 0xB1B90, 0x0, 0xB7850, 0x0, 0xB80F0, 0xB7C20 };
		constexpr uintptr_t does_exist[] = { 0xB1BE0, 0x0, 0xB78A0, 0x0, 0xB8140, 0xB7C70 };
		constexpr uintptr_t set_license_plate_text[] = { 0xB1BF0, 0x0, 0xB78B0, 0x0, 0xB8150, 0xB7C80 };
		constexpr uintptr_t set_rotation[] = { 0xB1C10, 0x0, 0xB78D0, 0x0, 0xB8170, 0xB7CA0 };
		constexpr uintptr_t construct_license_plate[] = { 0xB1C40, 0x0, 0xB7900, 0x0, 0xB81A0, 0xB7CD0 };
		constexpr uintptr_t shutdown_license_plate[] = { 0xB1C90, 0x0, 0xB7950, 0x0, 0xB81F0, 0xB7D20 };
		constexpr uintptr_t has_siren[] = { 0xB1DD0, 0x0, 0xB7A90, 0x0, 0xB8330, 0xB7E60 };
		constexpr uintptr_t get_max_passengers[] = { 0xB1DE0, 0x0, 0xB7AA0, 0x0, 0xB8340, 0xB7E70 };
		constexpr uintptr_t set_window_open_flag[] = { 0xB1E10, 0x0, 0xB7AD0, 0x0, 0xB8370, 0xB7EA0 };
		constexpr uintptr_t clear_window_open_flag[] = { 0xB1E40, 0x0, 0xB7B00, 0x0, 0xB83A0, 0xB7ED0 };
		constexpr uintptr_t enable_engine[] = { 0xB2510, 0x0, 0xB81D0, 0x0, 0xB8A70, 0xB85A0 };
	}

	namespace object {
		constexpr uintptr_t get_distance[] = { 0xA2960, 0x0, 0xA7730, 0x0, 0xA7FC0, 0xA7BB0 };
		constexpr uintptr_t stop[] = { 0xA29D0, 0x0, 0xA77A0, 0x0, 0xA8030, 0xA7C20 };
		constexpr uintptr_t set_rotation[] = { 0xA2A40, 0x0, 0xA7810, 0x0, 0xA80A0, 0xA7C90 };
		constexpr uintptr_t set_attached_to_vehicle[] = { 0xA2AB0, 0x0, 0xA7880, 0x0, 0xA8110, 0xA7D00 };
		constexpr uintptr_t set_attached_to_object[] = { 0xA2B40, 0x0, 0xA7910, 0x0, 0xA81A0, 0xA7D90 };
		constexpr uintptr_t attach_to_vehicle[] = { 0xA2BE0, 0x0, 0xA79B0, 0x0, 0xA8240, 0xA7E30 };
		constexpr uintptr_t attach_to_object[] = { 0xA2C60, 0x0, 0xA7A30, 0x0, 0xA82C0, 0xA7EB0 };
		constexpr uintptr_t rotate[] = { 0xA2D60, 0x0, 0xA7B30, 0x0, 0xA83C0, 0xA7FB0 };
		constexpr uintptr_t attached_to_moving_entity[] = { 0xA2E60, 0x0, 0xA7C30, 0x0, 0xA84C0, 0xA80B0 };
		constexpr uintptr_t set_material[] = { 0xA2ED0, 0x0, 0xA7CA0, 0x0, 0xA8530, 0xA8120 };
		constexpr uintptr_t set_material_text[] = { 0xA3050, 0x0, 0xA7E20, 0x0, 0xA86B0, 0xA82A0 };
		constexpr uintptr_t get_material_size[] = { 0xA3620, 0x0, 0xA83F0, 0x0, 0xA8C80, 0xA8870 };
		constexpr uintptr_t render[] = { 0xA3900, 0x0, 0xA86D0, 0x0, 0xA8F60, 0xA8B50 };
		constexpr uintptr_t process[] = { 0xA3F70, 0x0, 0xA8DC0, 0x0, 0xA9650, 0xA9240 };
		constexpr uintptr_t construct_material_text[] = { 0xA47F0, 0x0, 0xA9650, 0x0, 0xA9EE0, 0xA9AD0 };
		constexpr uintptr_t draw[] = { 0xA48A0, 0x0, 0xA9700, 0x0, 0xA9F90, 0xA9B80 };
		constexpr uintptr_t shutdown_material_text[] = { 0xA3870, 0x0, 0xA8640, 0x0, 0xA8ED0, 0xA8AC0 };
	}

	namespace pickup_pool {
		constexpr uintptr_t create[] = { 0xFDC0, 0x0, 0x12F20, 0x0, 0x12F20, 0x13170 };
		constexpr uintptr_t create_weapon[] = { 0xFCD0, 0x0, 0x12E30, 0x0, 0x13180, 0x13080 };
		constexpr uintptr_t get_index[] = { 0xFF30, 0x0, 0x13090, 0x0, 0x133E0, 0x132E0 };
		constexpr uintptr_t delete_pickup[] = { 0xFE70, 0x0, 0x12FD0, 0x0, 0x13320, 0x13220 };
		constexpr uintptr_t delete_weapon[] = { 0xFED0, 0x0, 0x13030, 0x0, 0x13380, 0x13280 };
		constexpr uintptr_t send_notification[] = { 0xFF90, 0x0, 0x130F0, 0x0, 0x13440, 0x13340 };
		constexpr uintptr_t process[] = { 0x10070, 0x0, 0x131D0, 0x0, 0x13520, 0x13420 };
	}

	namespace gang_zone_pool {
		constexpr uintptr_t create[] = { 0x2170, 0x0, 0x2160, 0x0, 0x2180, 0x21B0 };
		constexpr uintptr_t delete_zone[] = { 0x2230, 0x0, 0x2220, 0x0, 0x2240, 0x2270 };
		constexpr uintptr_t start_flashing[] = { 0x21F0, 0x0, 0x21E0, 0x0, 0x2200, 0x2230 };
		constexpr uintptr_t stop_flashing[] = { 0x2210, 0x0, 0x2200, 0x0, 0x2220, 0x2250 };
		constexpr uintptr_t draw[] = { 0x2260, 0x0, 0x2250, 0x0, 0x2270, 0x22A0 };
	}

	namespace textdraw_pool {
		constexpr uintptr_t create[] = { 0x1AE20, 0x0, 0x1E1C0, 0x0, 0x1E910, 0x1E3D0 };
		constexpr uintptr_t delete_textdraw[] = { 0x1AD00, 0x0, 0x1E0A0, 0x0, 0x1E7F0, 0x1E2B0 };
		constexpr uintptr_t draw[] = { 0x1AD40, 0x0, 0x1E0E0, 0x0, 0x1E830, 0x1E2F0 };
	}

	namespace menu_pool {
		constexpr uintptr_t create[] = { 0x7B00, 0x0, 0x7B30, 0x0, 0x7EB0, 0x7B90 };
		constexpr uintptr_t delete_menu[] = { 0x7BD0, 0x0, 0x7C00, 0x0, 0x7F70, 0x7C60 };
		constexpr uintptr_t show[] = { 0x7C20, 0x0, 0x7C50, 0x0, 0x7FC0, 0x7CB0 };
		constexpr uintptr_t hide[] = { 0x7C80, 0x0, 0x7CB0, 0x0, 0x8020, 0x7D10 };
		constexpr uintptr_t get_text_pointer[] = { 0x7CC0, 0x0, 0x7CF0, 0x0, 0x8060, 0x7D50 };
		constexpr uintptr_t process[] = { 0x7E60, 0x0, 0x7E90, 0x0, 0x8200, 0x7EF0 };
	}

	namespace label_pool {
		constexpr uintptr_t create[] = { 0x11C0, 0x0, 0x11C0, 0x0, 0x11D0, 0x11D0 };
		constexpr uintptr_t delete_label[] = { 0x12D0, 0x0, 0x12D0, 0x0, 0x12E0, 0x12E0 };
		constexpr uintptr_t draw[] = { 0x1340, 0x0, 0x1340, 0x0, 0x1350, 0x1350 };
	}

	namespace actor_pool {
		constexpr uintptr_t get[] = { 0x1600, 0x0, 0x1600, 0x0, 0x1610, 0x1615 };
		constexpr uintptr_t does_exist[] = { 0x1630, 0x0, 0x1630, 0x0, 0x1640, 0x1640 };
		constexpr uintptr_t update_largest_id[] = { 0x1650, 0x0, 0x1650, 0x0, 0x1660, 0x1660 };
		constexpr uintptr_t delete_actor[] = { 0x16E0, 0x0, 0x16E0, 0x0, 0x16F0, 0x16F0 };
		constexpr uintptr_t create[] = { 0x18F0, 0x0, 0x18F0, 0x0, 0x1900, 0x1900 };
		constexpr uintptr_t find[] = { 0x18A0, 0x0, 0x18A0, 0x0, 0x18B0, 0x18B0 };
	}

	namespace object_pool {
		constexpr uintptr_t update_largest_id[] = { 0xF340, 0x0, 0x12450, 0x0, 0x127A0, 0x126A0 };
		constexpr uintptr_t get_count[] = { 0xF3D0, 0x0, 0x124E0, 0x0, 0x12830, 0x12730 };
		constexpr uintptr_t delete_object[] = { 0xF3F0, 0x0, 0x12500, 0x0, 0x12850, 0x12750 };
		constexpr uintptr_t create[] = { 0xF470, 0x0, 0x12580, 0x0, 0x128D0, 0x127D0 };
		constexpr uintptr_t find[] = { 0xF520, 0x0, 0x12680, 0x0, 0x129D0, 0x128D0 };
		constexpr uintptr_t get_id[] = { 0xF560, 0x0, 0x126C0, 0x0, 0x12A10, 0x12910 };
		constexpr uintptr_t process[] = { 0xF5A0, 0x0, 0x12700, 0x0, 0x12A50, 0x12950 };
		constexpr uintptr_t construct_materials[] = { 0xF660, 0x0, 0x127C0, 0x0, 0x12B10, 0x12A10 };
		constexpr uintptr_t shutdown_materials[] = { 0xF6A0, 0x0, 0x12800, 0x0, 0x12B50, 0x12A50 };
		constexpr uintptr_t draw[] = { 0xF6E0, 0x0, 0x12840, 0x0, 0x12B90, 0x12A90 };
		constexpr uintptr_t draw_last[] = { 0xF720, 0x0, 0x12880, 0x0, 0x12BD0, 0x12AD0 };
		constexpr uintptr_t get[] = { 0x2DD0, 0x0, 0x2DC0, 0x0, 0x2DE0, 0x2E10 };
	}

	namespace vehicle_pool {
		constexpr uintptr_t create[] = { 0x1B590, 0x0, 0x1E930, 0x0, 0x1F080, 0x1EB40 };
		constexpr uintptr_t delete_vehicle[] = { 0x1AF90, 0x0, 0x1E330, 0x0, 0x1EA80, 0x1E540 };
		constexpr uintptr_t add_to_waiting_list[] = { 0x1B220, 0x0, 0x1E5C0, 0x0, 0x1ED10, 0x1E7D0 };
		constexpr uintptr_t process_waiting_list[] = { 0x1B810, 0x0, 0x1EBC0, 0x0, 0x1F300, 0x1EDC0 };
		constexpr uintptr_t send_destroy_notification[] = { 0x1B740, 0x0, 0x1EAE0, 0x0, 0x1F230, 0x1ECF0 };
		constexpr uintptr_t get_nearest[] = { 0x1B110, 0x0, 0x1E4B0, 0x0, 0x1EC00, 0x1E6C0 };
		constexpr uintptr_t find[] = { 0x1B0A0, 0x0, 0x1E440, 0x0, 0x1EB90, 0x1E650 };
		constexpr uintptr_t get_ref_by_id[] = { 0x1B0D0, 0x0, 0x1E470, 0x0, 0x1EBC0, 0x1E680 };
		constexpr uintptr_t get_ref_by_object[] = { 0x1B0F0, 0x0, 0x1E490, 0x0, 0x1EBE0, 0x1E6A0 };
		constexpr uintptr_t process[] = { 0x1B8D0, 0x0, 0x1EC80, 0x0, 0x1F3C0, 0x1EE80 };
		constexpr uintptr_t change_interior[] = { 0x1B010, 0x0, 0x1E3B0, 0x0, 0x1EB00, 0x1E5C0 };
		constexpr uintptr_t get_nearest_by_point[] = { 0x1B180, 0x0, 0x1E520, 0x0, 0x1EC70, 0x1E730 };
		constexpr uintptr_t construct_license_plates[] = { 0x1B280, 0x0, 0x1E620, 0x0, 0x1ED70, 0x1E830 };
		constexpr uintptr_t shutdown_license_plates[] = { 0x1B2F0, 0x0, 0x1E690, 0x0, 0x1EDE0, 0x1E8A0 };
		constexpr uintptr_t does_exist[] = { 0x1140, 0x0, 0x1140, 0x0, 0x1150, 0x1150 };
		constexpr uintptr_t get[] = { 0x1110, 0x0, 0x1110, 0x0, 0x1120, 0x1120 };
		constexpr uintptr_t set_params[] = { 0x1B040, 0x0, 0x1E3E0, 0x0, 0x1EB30, 0x1E5F0 };
		constexpr uintptr_t update_count[] = { 0x1AEC0, 0x0, 0x1E260, 0x0, 0x1E9B0, 0x1E470 };
	}

	namespace player_pool {
		constexpr uintptr_t update_largest_id[] = { 0x102B0, 0x0, 0x13400, 0x0, 0x13750, 0x13650 };
		constexpr uintptr_t process[] = { 0x10320, 0x0, 0x13470, 0x0, 0x137C0, 0x136C0 };
		constexpr uintptr_t find[] = { 0x10420, 0x0, 0x13570, 0x0, 0x138C0, 0x137C0 };
		constexpr uintptr_t deactivate[] = { 0x10650, 0x0, 0x13790, 0x0, 0x13B10, 0x139F0 };
		constexpr uintptr_t force_collision[] = { 0x107B0, 0x0, 0x138C0, 0x0, 0x13C90, 0x13B50 };
		constexpr uintptr_t restore_collision[] = { 0x10820, 0x0, 0x13930, 0x0, 0x13D10, 0x13BD0 };
		constexpr uintptr_t delete_player[] = { 0x10B90, 0x0, 0x13CB0, 0x0, 0x14090, 0x13F40 };
		constexpr uintptr_t create[] = { 0x10D50, 0x0, 0x13E80, 0x0, 0x14250, 0x14100 };
		constexpr uintptr_t get_player[] = { 0x10F0, 0x0, 0x10F0, 0x0, 0x10F0, 0x10F0 };
		constexpr uintptr_t get_local_player_name[] = { 0x13CD0, 0x0, 0xA170, 0x0, 0xA4E0, 0xA1D0 };
		constexpr uintptr_t is_disconnected[] = { 0x0, 0x0, 0x10D0, 0x0, 0x10D0, 0x10D0 };
		constexpr uintptr_t is_connected[] = { 0x10B0, 0x0, 0x10B0, 0x0, 0x10B0, 0x10B0 };
		constexpr uintptr_t set_local_player_name[] = { 0xB3E0, 0x0, 0xB5C0, 0x0, 0xB8A0, 0xB580 };
		constexpr uintptr_t set_at[] = { 0x10290, 0x0, 0x133E0, 0x0, 0x13730, 0x13630 };
		constexpr uintptr_t get_score[] = { 0x6A190, 0x0, 0x6E0E0, 0x0, 0x6E850, 0x6E290 };
		constexpr uintptr_t get_ping[] = { 0x6A1C0, 0x0, 0x6E110, 0x0, 0x6E880, 0x6E2B0 };
		constexpr uintptr_t get_name[] = { 0x13CE0, 0x0, 0x16F00, 0x0, 0x175C0, 0x170D0 };
		constexpr uintptr_t get_local_player_ping[] = { 0x6A200, 0x0, 0x6E150, 0x0, 0x6E8C0, 0x6E2F0 };
		constexpr uintptr_t get_local_player_score[] = { 0x6A1F0, 0x0, 0x6E140, 0x0, 0x6E8B0, 0x6E2E0 };
		constexpr uintptr_t get_count[] = { 0x10520, 0x0, 0x13670, 0x0, 0x139F0, 0x138C0 };
		constexpr uintptr_t get_local_player[] = { 0x1A30, 0x0, 0x1A30, 0x0, 0x1A40, 0x1A80 };
		constexpr uintptr_t find_accessory[] = { 0x106A0, 0x0, 0x137F0, 0x0, 0x13B70, 0x13A40 };
	}

	namespace remote_player {
		constexpr uintptr_t process[] = { 0x12EF0, 0x0, 0x16110, 0x0, 0x166B0, 0x16310 };
		constexpr uintptr_t process_head[] = { 0x10EA0, 0x0, 0x13FD0, 0x0, 0x143A0, 0x14240 };
		constexpr uintptr_t set_marker_state[] = { 0x10FF0, 0x0, 0x14120, 0x0, 0x14500, 0x14390 };
		constexpr uintptr_t set_marker_position[] = { 0x11030, 0x0, 0x14160, 0x0, 0x14540, 0x143D0 };
		constexpr uintptr_t surfing[] = { 0x110D0, 0x0, 0x0, 0x0, 0x0, 0x0 };
		constexpr uintptr_t surfing_on_vehicle[] = { 0x0, 0x0, 0x14200, 0x0, 0x145F0, 0x14470 };
		constexpr uintptr_t surfing_on_object[] = { 0x11100, 0x0, 0x14230, 0x0, 0x14620, 0x144A0 };
		constexpr uintptr_t process_surfing[] = { 0x11130, 0x0, 0x14260, 0x0, 0x14650, 0x144D0 };
		constexpr uintptr_t on_enter_vehicle[] = { 0x112D0, 0x0, 0x14410, 0x0, 0x14800, 0x14660 };
		constexpr uintptr_t on_exit_vehicle[] = { 0x113A0, 0x0, 0x144E0, 0x0, 0x148F0, 0x14730 };
		constexpr uintptr_t process_special_action[] = { 0x113F0, 0x0, 0x14530, 0x0, 0x14950, 0x14780 };
		constexpr uintptr_t update_aim_data[] = { 0x12080, 0x0, 0x15230, 0x0, 0x15760, 0x154A0 };
		constexpr uintptr_t update_unoccupied_data[] = { 0x121D0, 0x0, 0x15380, 0x0, 0x158D0, 0x15600 };
		constexpr uintptr_t update_trailer_data[] = { 0x12520, 0x0, 0x15740, 0x0, 0x15C90, 0x15950 };
		constexpr uintptr_t reset_data[] = { 0x12830, 0x0, 0x15A50, 0x0, 0x15FA0, 0x15C60 };
		constexpr uintptr_t get_distance_to_player[] = { 0x12930, 0x0, 0x15B40, 0x0, 0x160A0, 0x15D50 };
		constexpr uintptr_t change_state[] = { 0x12AE0, 0x0, 0x15CF0, 0x0, 0x16270, 0x15F10 };
		constexpr uintptr_t get_status[] = { 0x12BA0, 0x0, 0x15DB0, 0x0, 0x16330, 0x15FD0 };
		constexpr uintptr_t spawn[] = { 0x13890, 0x0, 0x16A90, 0x0, 0x17130, 0x16C50 };
		constexpr uintptr_t update_onfoot_data[] = { 0x139A0, 0x0, 0x16BB0, 0x0, 0x17260, 0x16DA0 };
		constexpr uintptr_t update_incar_data[] = { 0x13A80, 0x0, 0x16C90, 0x0, 0x17340, 0x16E70 };
		constexpr uintptr_t update_passenger_data[] = { 0x13B70, 0x0, 0x16D80, 0x0, 0x17440, 0x16F60 };
		constexpr uintptr_t remove[] = { 0x13C60, 0x0, 0x16E70, 0x0, 0x17530, 0x17040 };
		constexpr uintptr_t kill[] = { 0x13CA0, 0x0, 0x16EB0, 0x0, 0x17570, 0x17080 };
		constexpr uintptr_t chat[] = { 0x13D30, 0x0, 0x16F60, 0x0, 0x17610, 0x17120 };
		constexpr uintptr_t get_distance_to_local_player[] = { 0x129A0, 0x0, 0x15BB0, 0x0, 0x16120, 0x15DD0 };
		constexpr uintptr_t exit_vehicle[] = { 0x12AB0, 0x0, 0x15CC0, 0x0, 0x16230, 0x15EE0 };
		constexpr uintptr_t enter_vehicle[] = { 0x12A20, 0x0, 0x15C30, 0x0, 0x161A0, 0x15E50 };
		constexpr uintptr_t get_color_as_argb[] = { 0x12A00, 0x0, 0x15C10, 0x0, 0x16180, 0x15E30 };
		constexpr uintptr_t get_color_as_rgba[] = { 0x129F0, 0x0, 0x15C00, 0x0, 0x16170, 0x15E20 };
		constexpr uintptr_t set_color[] = { 0x129D0, 0x0, 0x15BE0, 0x0, 0x16150, 0x15E00 };
		constexpr uintptr_t set_onfoot_target_speed_and_position[] = { 0x11A60, 0x0, 0x14BE0, 0x0, 0x150D0, 0x14E50 };
		constexpr uintptr_t update_bullet_data[] = { 0x12BE0, 0x0, 0x15DF0, 0x0, 0x16370, 0x16010 };
		constexpr uintptr_t does_exist[] = { 0x1080, 0x0, 0x1080, 0x0, 0x1080, 0x1080 };
		constexpr uintptr_t update_onfoot_rotation[] = { 0x11990, 0x0, 0x14B10, 0x0, 0x14FF0, 0x14D80 };
		constexpr uintptr_t update_onfoot_speed_and_position[] = { 0x11840, 0x0, 0x14780, 0x0, 0x14C40, 0x149F0 };
		constexpr uintptr_t update_incar_speed_and_position[] = { 0x11AC0, 0x0, 0x14C50, 0x0, 0x15140, 0x14EC0 };
		constexpr uintptr_t update_incar_rotation[] = { 0x11DA0, 0x0, 0x14F50, 0x0, 0x15460, 0x151C0 };
		constexpr uintptr_t set_incar_target_speed_and_position[] = { 0x11F10, 0x0, 0x150C0, 0x0, 0x155E0, 0x15330 };
		constexpr uintptr_t update_train[] = { 0x11F80, 0x0, 0x15130, 0x0, 0x15650, 0x153A0 };
	}

	namespace local_player {
		constexpr uintptr_t reset_data[] = { 0x2E80, 0x0, 0x2E70, 0x0, 0x2E90, 0x2EC0 };
		constexpr uintptr_t process_head[] = { 0x2F80, 0x0, 0x2F80, 0x0, 0x2FA0, 0x2FD0 };
		constexpr uintptr_t set_special_action[] = { 0x30C0, 0x0, 0x30C0, 0x0, 0x30F0, 0x3110 };
		constexpr uintptr_t get_special_action[] = { 0x3340, 0x0, 0x3340, 0x0, 0x3410, 0x3390 };
		constexpr uintptr_t set_spawn_info[] = { 0x3AA0, 0x0, 0x3AA0, 0x0, 0x3BE0, 0x3AF0 };
		constexpr uintptr_t spawn[] = { 0x3AD0, 0x0, 0x3AD0, 0x0, 0x3C20, 0x3B20 };
		constexpr uintptr_t set_color[] = { 0x3D40, 0x0, 0x3D50, 0x0, 0x3ED0, 0x3DE0 };
		constexpr uintptr_t get_color_as_argb[] = { 0x3D90, 0x0, 0x3DA0, 0x0, 0x3F20, 0x3E20 };
		constexpr uintptr_t process_onfoot_world_bounds[] = { 0x3DC0, 0x0, 0x3DD0, 0x0, 0x3F50, 0x3E40 };
		constexpr uintptr_t process_incar_world_bounds[] = { 0x3E20, 0x0, 0x3E30, 0x0, 0x3FC0, 0x3EA0 };
		constexpr uintptr_t request_spawn[] = { 0x3EC0, 0x0, 0x3ED0, 0x0, 0x4060, 0x3F40 };
		constexpr uintptr_t prepare_for_class_selection[] = { 0x3EE0, 0x0, 0x3EF0, 0x0, 0x4080, 0x3F60 };
		constexpr uintptr_t prepare_for_class_selection_outcome[] = { 0x3F30, 0x0, 0x3F40, 0x0, 0x40E0, 0x3FB0 };
		constexpr uintptr_t enable_spectating[] = { 0x4000, 0x0, 0x4010, 0x0, 0x41C0, 0x4080 };
		constexpr uintptr_t spectate_for_vehicle[] = { 0x4060, 0x0, 0x4080, 0x0, 0x4230, 0x40F0 };
		constexpr uintptr_t spectate_for_player[] = { 0x40B0, 0x0, 0x40D0, 0x0, 0x4280, 0x4140 };
		constexpr uintptr_t send_unoccupied_data[] = { 0x4B30, 0x0, 0x4B60, 0x0, 0x4D30, 0x4BD0 };
		constexpr uintptr_t send_aim_data[] = { 0x4FF0, 0x0, 0x5040, 0x0, 0x5210, 0x5090 };
		constexpr uintptr_t wasted_notification[] = { 0x55E0, 0x0, 0x5620, 0x0, 0x5810, 0x5660 };
		constexpr uintptr_t request_class[] = { 0x56A0, 0x0, 0x56E0, 0x0, 0x58D0, 0x5720 };
		constexpr uintptr_t change_interior[] = { 0x5740, 0x0, 0x5780, 0x0, 0x5970, 0x57C0 };
		constexpr uintptr_t chat[] = { 0x57F0, 0x0, 0x5820, 0x0, 0x5A10, 0x5860 };
		constexpr uintptr_t enter_vehicle[] = { 0x58C0, 0x0, 0x58E0, 0x0, 0x5AD0, 0x5920 };
		constexpr uintptr_t exit_vehicle[] = { 0x59E0, 0x0, 0x5A00, 0x0, 0x5BF0, 0x5A40 };
		constexpr uintptr_t send_stats[] = { 0x5AF0, 0x0, 0x5B10, 0x0, 0x5D00, 0x5B50 };
		constexpr uintptr_t update_vehicle_damage[] = { 0x5BD0, 0x0, 0x5BE0, 0x0, 0x5DE0, 0x5C20 };
		constexpr uintptr_t next_class[] = { 0x5DE0, 0x0, 0x5DF0, 0x0, 0x5FF0, 0x5E30 };
		constexpr uintptr_t prev_class[] = { 0x5E70, 0x0, 0x5E80, 0x0, 0x6080, 0x5EC0 };
		constexpr uintptr_t update_weapons[] = { 0x6080, 0x0, 0x6090, 0x0, 0x6290, 0x5F40 };
		constexpr uintptr_t enter_vehicle_as_passenger[] = { 0x6D90, 0x0, 0x6DA0, 0x0, 0x6FE0, 0x6DE0 };
		constexpr uintptr_t send_incar_data[] = { 0x6E30, 0x0, 0x6E40, 0x0, 0x7080, 0x6E80 };
		constexpr uintptr_t process[] = { 0x7280, 0x0, 0x7270, 0x0, 0x74C0, 0x72D0 };
		constexpr uintptr_t end_surfing[] = { 0xB630, 0x0, 0x0, 0x0, 0x0, 0x0 };
		constexpr uintptr_t send_onfoot_data[] = { 0x4D10, 0x0, 0x4D40, 0x0, 0x4F00, 0x4DB0 };
		constexpr uintptr_t send_trailer_data[] = { 0x51B0, 0x0, 0x51F0, 0x0, 0x53D0, 0x5240 };
		constexpr uintptr_t send_passenger_data[] = { 0x5380, 0x0, 0x53B0, 0x0, 0x5590, 0x5400 };
		constexpr uintptr_t send_spawn_request[] = { 0x3A20, 0x0, 0x0, 0x0, 0x0, 0x0 };
		constexpr uintptr_t get_incar_send_rate[] = { 0x3970, 0x0, 0x3970, 0x0, 0x3AB0, 0x39C0 };
		constexpr uintptr_t get_onfoot_send_rate[] = { 0x39B0, 0x0, 0x39B0, 0x0, 0x3AF0, 0x3A00 };
		constexpr uintptr_t get_unoccupied_send_rate[] = { 0x39F0, 0x0, 0x39F0, 0x0, 0x3B30, 0x3A40 };
		constexpr uintptr_t get_ped[] = { 0x2D60, 0x0, 0x2D50, 0x0, 0x2D70, 0x2DA0 };
		constexpr uintptr_t get_color_as_rgba[] = { 0x3D70, 0x0, 0x3D80, 0x0, 0x3F00, 0x3E00 };
		constexpr uintptr_t draw_camera_target_label[] = { 0x4670, 0x0, 0x46A0, 0x0, 0x4850, 0x4710 };
		constexpr uintptr_t process_spectating[] = { 0x6310, 0x0, 0x6320, 0x0, 0x6540, 0x6360 };
		constexpr uintptr_t send_give_damage[] = { 0x6770, 0x0, 0x6780, 0x0, 0x69B0, 0x67C0 };
		constexpr uintptr_t send_take_damage[] = { 0x6660, 0x0, 0x6670, 0x0, 0x68A0, 0x66B0 };
		constexpr uintptr_t update_surfing[] = { 0x3460, 0x0, 0x3460, 0x0, 0x3570, 0x34B0 };
		constexpr uintptr_t needs_to_update[] = { 0x3920, 0x0, 0x3920, 0x0, 0x3A60, 0x3970 };
		constexpr uintptr_t set_surfing[] = { 0x35E0, 0x0, 0x35E0, 0x0, 0x3710, 0x3630 };
		constexpr uintptr_t process_surfing[] = { 0x3600, 0x0, 0x3600, 0x0, 0x3730, 0x3650 };
		constexpr uintptr_t process_class_selection[] = { 0x5EF0, 0x0, 0x5F00, 0x0, 0x6100, 0x5F40 };
		constexpr uintptr_t needs_to_send_onfoot_data[] = { 0x4120, 0x0, 0x4150, 0x0, 0x4300, 0x41C0 };
		constexpr uintptr_t needs_to_send_incar_data[] = { 0x4150, 0x0, 0x4190, 0x0, 0x4340, 0x41F0 };
		constexpr uintptr_t define_camera_target[] = { 0x4260, 0x0, 0x4290, 0x0, 0x4440, 0x4300 };
		constexpr uintptr_t process_unoccupied_sync[] = { 0x6BC0, 0x0, 0x6BD0, 0x0, 0x6E00, 0x6C10 };
		constexpr uintptr_t update_camera_target[] = { 0x0, 0x0, 0x4550, 0x0, 0x4700, 0x45C0 };
	}

	namespace vehicle_pool {
		constexpr uintptr_t create[] = { 0x1B590, 0x0, 0x1E930, 0x0, 0x1F080, 0x1EB40 };
		constexpr uintptr_t delete_vehicle[] = { 0x1AF90, 0x0, 0x1E330, 0x0, 0x1EA80, 0x1E540 };
		constexpr uintptr_t add_to_waiting_list[] = { 0x1B220, 0x0, 0x1E5C0, 0x0, 0x1ED10, 0x1E7D0 };
		constexpr uintptr_t process_waiting_list[] = { 0x1B810, 0x0, 0x1EBC0, 0x0, 0x1F300, 0x1EDC0 };
		constexpr uintptr_t send_destroy_notification[] = { 0x1B740, 0x0, 0x1EAE0, 0x0, 0x1F230, 0x1ECF0 };
		constexpr uintptr_t get_nearest[] = { 0x1B110, 0x0, 0x1E4B0, 0x0, 0x1EC00, 0x1E6C0 };
		constexpr uintptr_t find[] = { 0x1B0A0, 0x0, 0x1E440, 0x0, 0x1EB90, 0x1E650 };
		constexpr uintptr_t get_ref_by_id[] = { 0x1B0D0, 0x0, 0x1E470, 0x0, 0x1EBC0, 0x1E680 };
		constexpr uintptr_t get_ref_by_object[] = { 0x1B0F0, 0x0, 0x1E490, 0x0, 0x1EBE0, 0x1E6A0 };
		constexpr uintptr_t process[] = { 0x1B8D0, 0x0, 0x1EC80, 0x0, 0x1F3C0, 0x1EE80 };
		constexpr uintptr_t change_interior[] = { 0x1B010, 0x0, 0x1E3B0, 0x0, 0x1EB00, 0x1E5C0 };
		constexpr uintptr_t get_nearest_by_point[] = { 0x1B180, 0x0, 0x1E520, 0x0, 0x1EC70, 0x1E730 };
		constexpr uintptr_t construct_license_plates[] = { 0x1B280, 0x0, 0x1E620, 0x0, 0x1ED70, 0x1E830 };
		constexpr uintptr_t shutdown_license_plates[] = { 0x1B2F0, 0x0, 0x1E690, 0x0, 0x1EDE0, 0x1E8A0 };
		constexpr uintptr_t does_exist[] = { 0x1140, 0x0, 0x1140, 0x0, 0x1150, 0x1150 };
		constexpr uintptr_t get[] = { 0x1110, 0x0, 0x1110, 0x0, 0x1120, 0x1120 };
		constexpr uintptr_t set_params[] = { 0x1B040, 0x0, 0x1E3E0, 0x0, 0x1EB30, 0x1E5F0 };
		constexpr uintptr_t update_count[] = { 0x1AEC0, 0x0, 0x1E260, 0x0, 0x1E9B0, 0x1E470 };
	}

	namespace scoreboard {
		constexpr uintptr_t reference[] = { 0x21A0B4, 0x0, 0x26E894, 0x0, 0x26EB4C, 0x2AC9DC };
		constexpr uintptr_t get_rect[] = { 0x6A2D0, 0x0, 0x6E220, 0x0, 0x6E990, 0x6E3C0 };
		constexpr uintptr_t reset_dialog_controls[] = { 0x6A3F0, 0x0, 0x6E340, 0x0, 0x6EAB0, 0x6E4E0 };
		constexpr uintptr_t enable[] = { 0x6AD30, 0x0, 0x6EC80, 0x0, 0x6F3D0, 0x6EE10 };
		constexpr uintptr_t close[] = { 0x6A320, 0x0, 0x6E270, 0x0, 0x6E9E0, 0x6E410 };
		constexpr uintptr_t send_notification[] = { 0x6A550, 0x0, 0x6E4A0, 0x0, 0x6EC10, 0x6E640 };
		constexpr uintptr_t recalc[] = { 0x6A270, 0x0, 0x6E1C0, 0x0, 0x6E930, 0x6E360 };
		constexpr uintptr_t draw[] = { 0x6AA10, 0x0, 0x6E960, 0x0, 0x6F0B0, 0x6EAF0 };
		constexpr uintptr_t update_list[] = { 0x6A680, 0x0, 0x6E5C0, 0x0, 0x6ED30, 0x6E760 };
	}

	namespace netgame {
		constexpr uintptr_t reference[] = { 0x21A0F8, 0x0, 0x26E8DC, 0x0, 0x26EB94, 0x2ACA24 };
		constexpr uintptr_t get_pickup_pool[] = { 0x8130, 0x0, 0x8170, 0x0, 0x84E0, 0x81D0 };
		constexpr uintptr_t get_menu_pool[] = { 0x8140, 0x0, 0x8180, 0x0, 0x84F0, 0x81E0 };
		constexpr uintptr_t set_state[] = { 0x8150, 0x0, 0x8190, 0x0, 0x8500, 0x81F0 };
		constexpr uintptr_t initialize_pools[] = { 0x8160, 0x0, 0x81D0, 0x0, 0x8540, 0x8230 };
		constexpr uintptr_t initial_notification[] = { 0x8380, 0x0, 0x83F0, 0x0, 0x8760, 0x8450 };
		constexpr uintptr_t initialize_game_logic[] = { 0x8510, 0x0, 0x8580, 0x0, 0x88F0, 0x85E0 };
		constexpr uintptr_t connect[] = { 0x0, 0x0, 0x85D0, 0x0, 0x8940, 0x8630 };
		constexpr uintptr_t spawn_screen[] = { 0x0, 0x0, 0x8640, 0x0, 0x89B0, 0x86A0 };
		constexpr uintptr_t packet_rsa_public_key_mismatch[] = { 0x8850, 0x0, 0x89E0, 0x0, 0x8D50, 0x8A40 };
		constexpr uintptr_t packet_connection_banned[] = { 0x8870, 0x0, 0x8A00, 0x0, 0x8D70, 0x8A60 };
		constexpr uintptr_t packet_connection_request_accepted[] = { 0x8890, 0x0, 0x8A20, 0x0, 0x8D90, 0x8A80 };
		constexpr uintptr_t packet_no_free_incoming_connections[] = { 0x88B0, 0x0, 0x8A40, 0x0, 0x8DB0, 0x8AA0 };
		constexpr uintptr_t packet_disconnection_notification[] = { 0x88E0, 0x0, 0x8A70, 0x0, 0x8DE0, 0x8AD0 };
		constexpr uintptr_t packet_invalid_password[] = { 0x8920, 0x0, 0x8AB0, 0x0, 0x8E20, 0x8B10 };
		constexpr uintptr_t packet_connection_attempt_failed[] = { 0x8960, 0x0, 0x8AF0, 0x0, 0x8E60, 0x8B50 };
		constexpr uintptr_t update_players[] = { 0x8A10, 0x0, 0x8BA0, 0x0, 0x8F10, 0x8C00 };
		constexpr uintptr_t delete_marker[] = { 0x8AB0, 0x0, 0x8C40, 0x0, 0x8FB0, 0x8CA0 };
		constexpr uintptr_t reset_player_pool[] = { 0x8AE0, 0x0, 0x8C70, 0x0, 0x8FE0, 0x8CD0 };
		constexpr uintptr_t reset_vehicle_pool[] = { 0x8B80, 0x0, 0x8D10, 0x0, 0x9080, 0x8D70 };
		constexpr uintptr_t reset_text_draw_pool[] = { 0x8C20, 0x0, 0x8DB0, 0x0, 0x9110, 0x8E10 };
		constexpr uintptr_t reset_object_pool[] = { 0x8CC0, 0x0, 0x8E50, 0x0, 0x91B0, 0x8EB0 };
		constexpr uintptr_t reset_gang_zone_pool[] = { 0x8D60, 0x0, 0x8EF0, 0x0, 0x9250, 0x8F50 };
		constexpr uintptr_t reset_pickup_pool[] = { 0x8E00, 0x0, 0x8F90, 0x0, 0x92F0, 0x8FF0 };
		constexpr uintptr_t reset_menu_pool[] = { 0x8E60, 0x0, 0x8FF0, 0x0, 0x9350, 0x9050 };
		constexpr uintptr_t reset_label_pool[] = { 0x8F00, 0x0, 0x9080, 0x0, 0x9490, 0x90E0 };
		constexpr uintptr_t reset_actor_pool[] = { 0x8FA0, 0x0, 0x9120, 0x0, 0x93F0, 0x9180 };
		constexpr uintptr_t packet_unoccupied_sync[] = { 0x9550, 0x0, 0x96D0, 0x0, 0x9A40, 0x9730 };
		constexpr uintptr_t packet_bullet_sync[] = { 0x9650, 0x0, 0x97D0, 0x0, 0x9B40, 0x9830 };
		constexpr uintptr_t packet_aim_sync[] = { 0x9750, 0x0, 0x98D0, 0x0, 0x9C40, 0x9930 };
		constexpr uintptr_t packet_passenger_sync[] = { 0x9840, 0x0, 0x99C0, 0x0, 0x9D30, 0x9A20 };
		constexpr uintptr_t packet_trailer_sync[] = { 0x9930, 0x0, 0x9AB0, 0x0, 0x9E20, 0x9B10 };
		constexpr uintptr_t packet_markers_sync[] = { 0x9A20, 0x0, 0x9BA0, 0x0, 0x9F10, 0x9C00 };
		constexpr uintptr_t packet_auth_key[] = { 0x9C10, 0x0, 0x9D90, 0x0, 0xA100, 0x9DF0 };
		constexpr uintptr_t reset_markers[] = { 0x9DE0, 0x0, 0x9F50, 0x0, 0xA2C0, 0x9FB0 };
		constexpr uintptr_t create_marker[] = { 0x9E20, 0x0, 0x9F90, 0x0, 0xA300, 0x9FF0 };
		constexpr uintptr_t reset_pools[] = { 0xA010, 0x0, 0xA190, 0x0, 0xA4F0, 0xA1E0 };
		constexpr uintptr_t shutdown_for_restart[] = { 0xA060, 0x0, 0xA1E0, 0x0, 0xA540, 0xA230 };
		constexpr uintptr_t packet_player_sync[] = { 0xA250, 0x0, 0xA3E0, 0x0, 0xA740, 0xA420 };
		constexpr uintptr_t packet_vehicle_sync[] = { 0xA520, 0x0, 0xA6B0, 0x0, 0xAA10, 0xA6F0 };
		constexpr uintptr_t packet_connection_lost[] = { 0xA800, 0x0, 0xA990, 0x0, 0xACF0, 0xA9D0 };
		constexpr uintptr_t packet_connection_succeeded[] = { 0xA890, 0x0, 0xAA20, 0x0, 0xAD80, 0xAA60 };
		constexpr uintptr_t update_network[] = { 0xAD70, 0x0, 0xAF20, 0x0, 0xB260, 0xAF40 };
		constexpr uintptr_t process[] = { 0x0, 0x0, 0xB270, 0x0, 0xB5B0, 0xB290 };
		constexpr uintptr_t process_game_stuff[] = { 0x8680, 0x0, 0x87B0, 0x0, 0x8B20, 0x8810 };
		constexpr uintptr_t get_player_pool[] = { 0x1160, 0x0, 0x1160, 0x0, 0x1170, 0x1170 };
		constexpr uintptr_t get_object_pool[] = { 0x2E00, 0x0, 0x2DF0, 0x0, 0x2E10, 0x2E40 };
		constexpr uintptr_t get_actor_pool[] = { 0x2E10, 0x0, 0x2E00, 0x0, 0x2E20, 0x2E50 };
		constexpr uintptr_t get_state[] = { 0x2E20, 0x0, 0x2E10, 0x0, 0x2E30, 0x2E60 };
		constexpr uintptr_t lan_mode[] = { 0x2E30, 0x0, 0x2E20, 0x0, 0x2E40, 0x2E70 };
		constexpr uintptr_t get_vehicle_pool[] = { 0x1170, 0x0, 0x1170, 0x0, 0x1180, 0x1180 };
		constexpr uintptr_t get_rak_client[] = { 0x1A40, 0x0, 0x1A40, 0x0, 0xBBC0, 0x0 };
		constexpr uintptr_t get_counter[] = { 0x8500, 0x0, 0x8570, 0x0, 0x88E0, 0x85D0 };
	}

	namespace rakhook {
		constexpr uintptr_t samp_info[] = { 0x21a0f8, 0x21A100, 0x26e8dc, 0x26ea0c, 0x26EB94, 0x2aca24 };
		constexpr uintptr_t rakclient_interface[] = { 0x3c9, 0x18, 0x2c, 0x2c, 0x0, 0x2c };
		constexpr uintptr_t destroy_interface[] = { 0x342d0, 0x343B0, 0x37680, 0x37d70, 0x37DC0, 0x37880 };
		constexpr uintptr_t handle_rpc_packet[] = { 0x372f0, 0x373D0, 0x3a6a0, 0x3ad90, 0x3ADE0, 0x3a8a0 };
		constexpr uintptr_t alloc_packet[] = { 0x347e0, 0x348C0, 0x37b90, 0x38280, 0x382D0, 0x37d90 };
		constexpr uintptr_t offset_packets[] = { 0xdb6, 0xdb6, 0xdb6, 0xdb6, 0xdb6, 0xdb6 };
		constexpr uintptr_t write_lock[] = { 0x35b10, 0x35BF0, 0x38ec0, 0x395b0, 0x39600, 0x390c0 };
		constexpr uintptr_t write_unlock[] = { 0x35b50, 0x35C30, 0x38f00, 0x395f0, 0x39640, 0x39100 };
	}
}


#define OFFSET(array) (array[static_cast<int>(samp::version())])
#define OFFSET_BASED(array) (samp::address(OFFSET(array)))

#endif // !OFFSETS_HPP